/**
 * Created by rahul on 14/7/16.
 */
var q = require("q");
var CACHE = null;
var mongoClient = require("mongodb").MongoClient;
var Config = require("./Config");
var DB = function(dbName){
    this.dbName = (dbName != undefined) ? dbName : "chatdb";
}

DB.prototype.insert = function(document,collection){
    return getDbInstance(this.dbName).then(function(db){
        var D = q.defer();
        db.collection(collection).insert(document,function(err,res){
            if(err){
                D.reject("Issue with the Query"+err.message)
            }
//            console.log("res >> >> >> "+JSON.stringify(res));
            D.resolve(res);
        })
        return D.promise;
    })
}

DB.prototype.update = function(document,collection,filter){
    return getDbInstance(this.dbName).then(function(db){
        var D = q.defer();
        db.collection(collection).updateOne(filter,document,function(err,res){
            if(err){
                D.reject("Issue with the Query"+err.message)
            }
//            console.log("res >> >> >> "+JSON.stringify(res));
            D.resolve(res);
        })
        return D.promise;
    })
}

DB.prototype.query = function(filter,collection){
    return getDbInstance(this.dbName).then(function(db){
        var D = q.defer();
        db.collection(collection).findOne(filter,function(err,res){
            if(err){
                D.reject("Issue with the Query"+err.message)
            }
//            console.log("res >> >> >> "+JSON.stringify(res));
            D.resolve(res);
        })
        return D.promise;
    })
}




function getDbInstance(dbName){
    var P = q.defer();
    if(CACHE != null){
        P.resolve(CACHE);
    }
    mongoClient.connect(Config(dbName),function(err,db){
        if(err){
            throw Error("Error Connecting!!");
        }
        CACHE = db;
        P.resolve(CACHE);
    })

    return P.promise;
}

module.exports =DB;